{"version":3,"sources":["keys.js","canvas.js","collision.js","ship.js","utils.js","life.js","game.js","enemies/index.js","index.js"],"names":["keysMap","UsableKeys","populateKeysMap","includes","event","code","type","canvas","document","getElementById","ctx","getContext","collision","r","h","xin","x","width","yin","y","height","shipDefault","speed","hit","opacity","ship","move","Math","max","min","munitions","defaultMunition","power","drawMunitions","forEach","munition","index","removeMunitionNotShown","fillStyle","fillRect","splice","shoot","push","opacityDirection","handleCollisions","drawShip","resetShip","random","lifeDefault","collided","life","moveLife","game","lifes","drawLife","font","fillText","generateLife","resetLife","statusBar","lifesCount","stageCount","score","gameDefault","stage","paused","over","previousGame","drawStatusBar","innerHTML","innerText","toLocaleString","reset","gameOver","updateLevel","enemiesCount","enemies","generateEnemies","Array","keys","map","_","armor","points","shotDown","hitShip","enemy","setTimeout","hitByMunition","indexEnemies","indexMunitions","moveEnemies","removeEnemyNotShown","drawEnemies","length","resetEnemies","gameStatus","draw","clearRect","handleGameStatus","update","requestAnimationFrame","style","display","start","pause","togglePause","addEventListener","focus","window"],"mappings":"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","file":"src.e31bb0bc.map","sourceRoot":"../src","sourcesContent":["export let keysMap = {}\n\nconst UsableKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', 'Space']\n\nexport const populateKeysMap = () => {\n  if (UsableKeys.includes(event.code)){\n    keysMap[event.code] = event.type == 'keydown'\n  }\n}\n","export const canvas = document.getElementById('board')\nexport const ctx = canvas.getContext(\"2d\")\n","export const collision = (r, h) => {\n  const xin = h.x + h.width >= r.x && h.x <= r.x + r.width\n  const yin = h.y + h.height >= r.y && h.y <= r.y + r.height\n\n  return xin && yin\n}\n","import { canvas, ctx } from './canvas'\nimport { keysMap } from './keys'\nimport { collision } from './collision'\n\nconst shipDefault = {\n  speed: 6,\n  width: 30,\n  height: 30,\n  x: canvas.width / 2 - 20,\n  y: canvas.height - 60,\n  hit: false,\n  opacity: 1\n}\n\nexport let ship = { ...shipDefault }\n\nconst move = () => {\n  if (keysMap['ArrowUp']) {\n    ship.y -= ship.speed\n  }\n  if (keysMap['ArrowDown']) {\n    ship.y += ship.speed\n  }\n  if (keysMap['ArrowLeft']) {\n    ship.x -= ship.speed\n  }\n  if (keysMap['ArrowRight']){\n    ship.x += ship.speed\n  }\n  // Wall collision\n  ship.x = Math.max(Math.min(ship.x, canvas.width - ship.width), 0)\n  ship.y = Math.max(Math.min(ship.y, canvas.height - ship.height), 0)\n}\n\n\nexport let munitions = []\nconst defaultMunition = {\n  width: 3,\n  height: 3,\n  speed: -10,\n  power: 1\n}\n\nconst drawMunitions = () => {\n  munitions.forEach((munition, index) => {\n    removeMunitionNotShown(munition, index)\n    munition.y += munition.speed\n    ctx.fillStyle = `rgb(0, 0, 0)`\n    ctx.fillRect(munition.x, munition.y, munition.width, munition.height)\n  })\n}\n\nconst removeMunitionNotShown = (munition, index) => {\n  if (munition.y <= 0) {\n    munitions.splice(index, 1)\n  }\n}\n\nconst shoot = () => {\n  if (keysMap['Space']) {\n    munitions.push({\n      ...defaultMunition,\n      x: ship.x + ship.width / 2 - 2,\n      y: ship.y\n    })\n  }\n}\n\nlet opacityDirection = -1\n\nconst handleCollisions = () => {\n  if (ship.hit) {\n    ship.opacity += opacityDirection * 0.08\n    if (ship.opacity <= 0.2) opacityDirection = 1\n    if (ship.opacity >= 1) opacityDirection = -1\n  } else {\n    ship.opacity = 1\n  }\n}\n\n\nexport const drawShip = () => {\n  move()\n  shoot()\n  drawMunitions()\n  handleCollisions()\n  ctx.fillStyle = `rgb(0, 0, 0, ${ship.opacity})`\n  ctx.fillRect(ship.x, ship.y, ship.width, ship.height)\n}\n\nexport const resetShip = () => {\n  ship = { ...shipDefault }\n}\n","export const random = (max, min) =>\n  Math.random() * (max - min) + min\n","import { ctx, canvas } from './canvas'\nimport { ship } from './ship'\nimport { collision } from './collision'\nimport { game } from './game'\nimport { random } from './utils'\n\nexport const lifeDefault = {\n  width: 16,\n  height: 16,\n  collided: false,\n  y: 50,\n  x: 200,\n  speed: 0.5\n}\n\nexport let life = { ...lifeDefault }\n\nconst moveLife = () => {\n  if (collision(life, ship)) {\n    game.lifes += 1\n    life.y = -100\n    life.collided = true\n  }\n  life.y += life.speed\n}\n\nexport const drawLife = () => {\n  if (!life.collided) {\n    moveLife()\n    ctx.fillStyle = 'black'\n    ctx.fillRect(life.x, life.y, life.width, life.height)\n    ctx.font = '8px sans-serif';\n    ctx.fillStyle = 'white';\n    ctx.fillText(\"♥\", life.x + 4, life.y + 11)\n  }\n}\n\nexport const generateLife = () => {\n  if (life.y < 0 || life.y > canvas.height) {\n    life.x = random(10, canvas.width - 20)\n    life.y = random(-200, -800)\n    life.speed = random(1, 3)\n    life.collided = false\n  }\n}\n\nexport const resetLife = () => {\n  life = { ...lifeDefault }\n}\n","import { resetLife, generateLife } from './life'\nimport { resetShip } from './ship'\nimport { resetEnemies, generateEnemies } from './enemies'\n\n\nexport const statusBar = document.getElementById('status-bar')\nconst lifesCount = document.getElementById('lifes')\nconst stageCount = document.getElementById('stage')\nconst score = document.getElementById('score')\n\nexport const gameDefault = {\n  lifes: 1,\n  stage: 0,\n  paused: true,\n  over: false,\n  score: 0\n}\n\nexport let game = { ...gameDefault }\n\nlet previousGame = {\n  lifes: null,\n  stage: null,\n  score: null\n}\n\nexport const drawStatusBar = () => {\n  if (game.lifes !== previousGame.lifes) {\n    lifesCount.innerHTML = `♥ ${game.lifes}`\n    previousGame.lifes = game.lifes\n  }\n  if (game.stage !== previousGame.stage) {\n    stageCount.innerText = `Stage ${game.stage}`\n    previousGame.stage = game.stage\n  }\n  if (game.score !== previousGame.score) {\n    score.innerText = game.score.toLocaleString()\n    previousGame.score = game.score\n  }\n}\n\nexport const reset = () => {\n  resetShip()\n  resetLife()\n  resetEnemies()\n  game = { ...gameDefault, paused: false }\n\n}\n\nexport const gameOver = () => {\n  game.paused = true\n  game.over = true\n}\n\nexport const updateLevel = () => {\n  game.stage += 1\n  generateLife()\n  generateEnemies()\n}\n","import { ctx, canvas } from '../canvas'\nimport { ship, munitions } from '../ship'\nimport { collision } from '../collision'\nimport { game, updateLevel } from '../game'\nimport { random } from '../utils'\n\nconst enemiesCount = 30\nlet enemies = []\n\nexport const generateEnemies = () => {\n  enemies = [\n    ...enemies,\n    ...[...Array(enemiesCount + game.stage).keys()].map(_ => ({\n      speed: random(0.1, Math.min(1 + game.stage, ship.speed - 1)),\n      width: 20,\n      height: 20,\n      armor: 10,\n      points: {\n        hit: 1,\n        shotDown: 10,\n      },\n      x: random(0, canvas.width - 20),\n      y: random(-1000, -30)\n    }))\n  ]\n}\n\nconst hitShip = (enemy) => {\n  if (!ship.hit && collision(enemy, ship)) {\n    ship.hit = true\n    game.lifes -= 1\n    setTimeout(() => {\n      ship.hit = false\n    }, 2000)\n  }\n}\n\nconst hitByMunition = (enemy, indexEnemies) => {\n  munitions.forEach((munition, indexMunitions) => {\n    if (collision(enemy, munition)) {\n      enemy.armor -= munition.power\n      game.score += enemy.points.hit\n      if (enemy.armor <= 0) {\n        game.score += enemy.points.shotDown\n        enemies.splice(indexEnemies, 1)\n      }\n      munitions.splice(indexMunitions, 1)\n    }\n  })\n}\n\nconst moveEnemies = () => {\n  enemies.forEach((enemy, index) => {\n    removeEnemyNotShown(enemy, index)\n    hitShip(enemy)\n    hitByMunition(enemy, index)\n    enemy.y += enemy.speed\n  })\n}\n\nexport const drawEnemies = () => {\n  if (enemies.length <= enemiesCount) updateLevel()\n  moveEnemies()\n  enemies.forEach(enemy => {\n    ctx.fillStyle = `rgb(50, 50, 50)`\n    ctx.fillRect(enemy.x, enemy.y, enemy.width, enemy.height)\n  })\n}\n\nconst removeEnemyNotShown = (enemy, index) => {\n  if (enemy.y > canvas.height) {\n    enemies.splice(index, 1)\n  }\n}\n\nexport const resetEnemies = () => {\n  enemies = []\n}\n","import { populateKeysMap, keysMap } from './keys'\nimport { canvas, ctx } from './canvas'\nimport { drawEnemies } from './enemies'\nimport { drawLife } from './life'\nimport { drawShip } from './ship'\nimport { drawStatusBar, game, gameOver, reset } from './game'\n\nconst gameStatus = document.getElementById('game-status')\n\nconst draw = () => {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n  drawEnemies()\n  drawLife()\n  drawShip()\n  drawStatusBar()\n  handleGameStatus()\n\n}\n\nconst update = () => {\n  setTimeout(() => {\n    if (game.over && keysMap['Enter']) reset()\n    if (game.lifes === 0) gameOver()\n    draw()\n    if (!game.paused) requestAnimationFrame(update)\n  }, 1000 / 60)\n}\n\nconst handleGameStatus = () => {\n  if (game.paused) {\n    gameStatus.style.display = 'block'\n    if (game.over) {\n      gameStatus.innerHTML = `\n        GAME OVER\n        <br />\n        Press Enter to Restart\n      `\n    } else {\n      gameStatus.innerHTML = `\n        &#10074;&#10074; Paused\n        <br />\n        Press Enter to resume\n      `\n    }\n  } else {\n    gameStatus.style.display = 'none'\n  }\n}\n\nconst start = () => {\n  game.paused = false\n  update()\n}\n\nconst pause = () => {\n  game.paused = true\n  update()\n}\n\nconst togglePause = () => {\n  game.paused ? start() : pause()\n}\n\ncanvas.addEventListener('click', () => {\n  canvas.focus()\n})\n\ncanvas.addEventListener('focus', () => {\n  if (game.paused) start()\n})\n\ncanvas.addEventListener('blur', () => {\n  if (!game.paused) pause()\n})\n\nwindow.addEventListener('keydown', () => {\n  if (event.code === 'Enter') togglePause()\n  populateKeysMap()\n})\n\nwindow.addEventListener('keyup', () => {\n  populateKeysMap()\n})\n"]}